----------------------------------------------------------------------
rank=3

DDP
module.module.0.weight:
 torch.Size([2, 2]) 
 Parameter containing:
tensor([[ 0.2059,  0.1117],
        [-0.3558, -0.0257]], device='cuda:3', requires_grad=True)
torch.Size([2, 2]) 
 tensor([[-0.4257,  0.0528],
        [ 0.0000,  0.0000]], device='cuda:3')

FSDP
module._fsdp_wrapped_module.0.weight:
 torch.Size([0]) 
 Parameter containing:
tensor([], device='cuda:3', requires_grad=True)

TP-FSDP
module._fsdp_wrapped_module.0.weight:
 torch.Size([0]) 
 Parameter containing:
tensor([], device='cuda:3', requires_grad=True)
----------------------------------------------------------------------
rank=3

DDP
module.module.2.weight:
 torch.Size([2, 2]) 
 Parameter containing:
tensor([[-0.6096, -0.4934],
        [-0.1113, -0.6492]], device='cuda:3', requires_grad=True)
torch.Size([2, 2]) 
 tensor([[0.1134, 0.0000],
        [0.1134, 0.0000]], device='cuda:3')

FSDP
module._fsdp_wrapped_module.2.weight:
 torch.Size([2]) 
 Parameter containing:
tensor([-0.1113, -0.6492], device='cuda:3', requires_grad=True)
torch.Size([2]) 
 tensor([0.1134, 0.0000], device='cuda:3')

TP-FSDP
module._fsdp_wrapped_module.2.weight:
 torch.Size([2]) 
 Parameter containing:
tensor([-0.4934, -0.6492], device='cuda:3', requires_grad=True)
torch.Size([2]) 
 tensor([0., 0.], device='cuda:3')
----------------------------------------------------------------------
rank=3

DDP
module.module.0.weight:
 torch.Size([2, 2]) 
 Parameter containing:
tensor([[ 0.2059,  0.1117],
        [-0.3558, -0.0257]], device='cuda:3', requires_grad=True)
torch.Size([2, 2]) 
 tensor([[-0.4257,  0.0528],
        [ 0.0000,  0.0000]], device='cuda:3')

FSDP
module._fsdp_wrapped_module.0.weight:
 torch.Size([0]) 
 Parameter containing:
tensor([], device='cuda:3', requires_grad=True)

TP-FSDP
module._fsdp_wrapped_module.0.weight:
 torch.Size([0]) 
 Parameter containing:
tensor([], device='cuda:3', requires_grad=True)
----------------------------------------------------------------------
rank=3

DDP
module.module.2.weight:
 torch.Size([2, 2]) 
 Parameter containing:
tensor([[-0.6096, -0.4934],
        [-0.1113, -0.6492]], device='cuda:3', requires_grad=True)
torch.Size([2, 2]) 
 tensor([[0.1134, 0.0000],
        [0.1134, 0.0000]], device='cuda:3')

FSDP
module._fsdp_wrapped_module.2.weight:
 torch.Size([2]) 
 Parameter containing:
tensor([-0.1113, -0.6492], device='cuda:3', requires_grad=True)
torch.Size([2]) 
 tensor([0.1134, 0.0000], device='cuda:3')

TP-FSDP
module._fsdp_wrapped_module.2.weight:
 torch.Size([2]) 
 Parameter containing:
tensor([-0.4934, -0.6492], device='cuda:3', requires_grad=True)
torch.Size([2]) 
 tensor([0., 0.], device='cuda:3')
----------------------------------------------------------------------
rank=3

DDP
module.module.0.weight:
 torch.Size([2, 2]) 
 Parameter containing:
tensor([[ 0.2059,  0.1117],
        [-0.3558, -0.0257]], device='cuda:3', requires_grad=True)
torch.Size([2, 2]) 
 tensor([[-0.4257,  0.0528],
        [ 0.0000,  0.0000]], device='cuda:3')

FSDP
module._fsdp_wrapped_module.0.weight:
 torch.Size([0]) 
 Parameter containing:
tensor([], device='cuda:3', requires_grad=True)

TP-FSDP
module._fsdp_wrapped_module.0.weight:
 torch.Size([0]) 
 Parameter containing:
tensor([], device='cuda:3', requires_grad=True)
----------------------------------------------------------------------
----------------------------------------------------------------------
